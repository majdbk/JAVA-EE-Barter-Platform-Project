package tn.esprit.persistance;
// Generated 19 nov. 2016 13:17:14 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Category generated by hbm2java
 */
@Entity
@Table(name = "category", catalog = "troc")
public class Category implements java.io.Serializable {

	
	private Integer idCategory;
	private String name;
	private String description;
	private Date creationDate;
	private Set<Subcategory> subcategories = new HashSet<Subcategory>(0);
	private static final long serialVersionUID = 1L;
	
	public Category() {
	}

	public Category(Date creationDate) {
		this.creationDate = creationDate;
	}

	public Category(String name, String description, Date creationDate, Set<Subcategory> subcategories) {
		this.name = name;
		this.description = description;
		this.creationDate = creationDate;
		this.subcategories = subcategories;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_category", unique = true, nullable = false)
	public Integer getIdCategory() {
		return this.idCategory;
	}

	public void setIdCategory(Integer idCategory) {
		this.idCategory = idCategory;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", nullable = false, length = 19)
	public Date getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "category")
	public Set<Subcategory> getSubcategories() {
		return this.subcategories;
	}

	public void setSubcategories(Set<Subcategory> subcategories) {
		this.subcategories = subcategories;
	}

}
