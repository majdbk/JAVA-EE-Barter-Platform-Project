package tn.esprit.persistance;
// Generated 19 nov. 2016 13:17:14 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Swapper generated by hbm2java
 */
@Entity
@Table(name = "swapper", catalog = "troc")
public class Swapper implements java.io.Serializable {

	private Integer idSwapper;
	private String firstname;
	private String lastname;
	private Date dateofbirth;
	private Date registrationdate;
	private Date dateoflastcon;
	private long phone;
	private String adress;
	private String state;
	private Integer dure;
	private int autodesactivate;
	private int sex;
	private String status;
	private String imgPath;
	private int points;
	private String email;
	private boolean emailConfirmed;
	private String password;
	private String securityStamp;
	private String phoneNumber;
	private boolean phoneNumberConfirmed;
	private boolean twoFactorEnabled;
	private Date lockoutEndDateUtc;
	private boolean lockoutEnabled;
	private int accessFailedCount;
	private String login;
	private List<ForumClaim> forumsclaims;
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "swapper",cascade=CascadeType.REMOVE,orphanRemoval = true)
	public List<ForumClaim> getForumsclaims() {
		return forumsclaims;
	}

	public void setForumsclaims(List<ForumClaim> forumsclaims) {
		this.forumsclaims = forumsclaims;
	}

	private Set<Swapperclaim> swapperclaimsForSwapperrecId = new HashSet<Swapperclaim>(0);
	private Set<Service> services = new HashSet<Service>(0);
	private Set<Customuserclaims> customuserclaimses = new HashSet<Customuserclaims>(0);
	private Set<Swapperclaim> swapperclaimsForSwappersurId = new HashSet<Swapperclaim>(0);
	private Set<Customuserlogins> customuserloginses = new HashSet<Customuserlogins>(0);
	private Set<Comments> commentses = new HashSet<Comments>(0);
	private Set<Forum> forums = new HashSet<Forum>(0);
	private Set<Notes> noteses = new HashSet<Notes>(0);
	private Set<Cadeau> cadeaus = new HashSet<Cadeau>(0);
	private Set<Goods> goodses = new HashSet<Goods>(0);
	private Set<Claim> claims = new HashSet<Claim>(0);
	private Set<Customuserroles> customuserroleses = new HashSet<Customuserroles>(0);
	private static final long serialVersionUID = 1L;

	public Swapper() {
	}

	public Swapper(Date dateofbirth, Date registrationdate, Date dateoflastcon, long phone, int autodesactivate,
			int sex, int points, boolean emailConfirmed, boolean phoneNumberConfirmed, boolean twoFactorEnabled,
			boolean lockoutEnabled, int accessFailedCount) {
		this.dateofbirth = dateofbirth;
		this.registrationdate = registrationdate;
		this.dateoflastcon = dateoflastcon;
		this.phone = phone;
		this.autodesactivate = autodesactivate;
		this.sex = sex;
		this.points = points;
		this.emailConfirmed = emailConfirmed;
		this.phoneNumberConfirmed = phoneNumberConfirmed;
		this.twoFactorEnabled = twoFactorEnabled;
		this.lockoutEnabled = lockoutEnabled;
		this.accessFailedCount = accessFailedCount;
	}

	public Swapper(String firstname, String lastname, Date dateofbirth, Date registrationdate, Date dateoflastcon,
			long phone, String adress, String state, Integer dure, int autodesactivate, int sex, String status,
			String imgPath, int points, String email, boolean emailConfirmed, String password, String securityStamp,
			String phoneNumber, boolean phoneNumberConfirmed, boolean twoFactorEnabled, Date lockoutEndDateUtc,
			boolean lockoutEnabled, int accessFailedCount, String login, Set<Swapperclaim> swapperclaimsForSwapperrecId,
			Set<Service> services, Set<Customuserclaims> customuserclaimses,
			Set<Swapperclaim> swapperclaimsForSwappersurId, Set<Customuserlogins> customuserloginses,
			Set<Comments> commentses, Set<Forum> forums, Set<Notes> noteses, Set<Cadeau> cadeaus, Set<Goods> goodses,
			Set<Claim> claims, Set<Customuserroles> customuserroleses) {
		this.firstname = firstname;
		this.lastname = lastname;
		this.dateofbirth = dateofbirth;
		this.registrationdate = registrationdate;
		this.dateoflastcon = dateoflastcon;
		this.phone = phone;
		this.adress = adress;
		this.state = state;
		this.dure = dure;
		this.autodesactivate = autodesactivate;
		this.sex = sex;
		this.status = status;
		this.imgPath = imgPath;
		this.points = points;
		this.email = email;
		this.emailConfirmed = emailConfirmed;
		this.password = password;
		this.securityStamp = securityStamp;
		this.phoneNumber = phoneNumber;
		this.phoneNumberConfirmed = phoneNumberConfirmed;
		this.twoFactorEnabled = twoFactorEnabled;
		this.lockoutEndDateUtc = lockoutEndDateUtc;
		this.lockoutEnabled = lockoutEnabled;
		this.accessFailedCount = accessFailedCount;
		this.login = login;
		this.swapperclaimsForSwapperrecId = swapperclaimsForSwapperrecId;
		this.services = services;
		this.customuserclaimses = customuserclaimses;
		this.swapperclaimsForSwappersurId = swapperclaimsForSwappersurId;
		this.customuserloginses = customuserloginses;
		this.commentses = commentses;
		this.forums = forums;
		this.noteses = noteses;
		this.cadeaus = cadeaus;
		this.goodses = goodses;
		this.claims = claims;
		this.customuserroleses = customuserroleses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_swapper", unique = true, nullable = false)
	public Integer getIdSwapper() {
		return this.idSwapper;
	}

	public void setIdSwapper(Integer idSwapper) {
		this.idSwapper = idSwapper;
	}

	@Column(name = "firstname")
	public String getFirstname() {
		return this.firstname;
	}

	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	@Column(name = "lastname")
	public String getLastname() {
		return this.lastname;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dateofbirth", nullable = false, length = 19)
	public Date getDateofbirth() {
		return this.dateofbirth;
	}

	public void setDateofbirth(Date dateofbirth) {
		this.dateofbirth = dateofbirth;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "registrationdate", nullable = false, length = 19)
	public Date getRegistrationdate() {
		return this.registrationdate;
	}

	public void setRegistrationdate(Date registrationdate) {
		this.registrationdate = registrationdate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dateoflastcon", nullable = false, length = 19)
	public Date getDateoflastcon() {
		return this.dateoflastcon;
	}

	public void setDateoflastcon(Date dateoflastcon) {
		this.dateoflastcon = dateoflastcon;
	}

	@Column(name = "phone", nullable = false)
	public long getPhone() {
		return this.phone;
	}

	public void setPhone(long phone) {
		this.phone = phone;
	}

	@Column(name = "adress")
	public String getAdress() {
		return this.adress;
	}

	public void setAdress(String adress) {
		this.adress = adress;
	}

	@Column(name = "state")
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

	@Column(name = "dure")
	public Integer getDure() {
		return this.dure;
	}

	public void setDure(Integer dure) {
		this.dure = dure;
	}

	@Column(name = "autodesactivate", nullable = false)
	public int getAutodesactivate() {
		return this.autodesactivate;
	}

	public void setAutodesactivate(int autodesactivate) {
		this.autodesactivate = autodesactivate;
	}

	@Column(name = "sex", nullable = false)
	public int getSex() {
		return this.sex;
	}

	public void setSex(int sex) {
		this.sex = sex;
	}

	@Column(name = "status")
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "imgPath")
	public String getImgPath() {
		return this.imgPath;
	}

	public void setImgPath(String imgPath) {
		this.imgPath = imgPath;
	}

	@Column(name = "points", nullable = false)
	public int getPoints() {
		return this.points;
	}

	public void setPoints(int points) {
		this.points = points;
	}

	@Column(name = "Email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "EmailConfirmed", nullable = false)
	public boolean isEmailConfirmed() {
		return this.emailConfirmed;
	}

	public void setEmailConfirmed(boolean emailConfirmed) {
		this.emailConfirmed = emailConfirmed;
	}

	@Column(name = "password")
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "SecurityStamp")
	public String getSecurityStamp() {
		return this.securityStamp;
	}

	public void setSecurityStamp(String securityStamp) {
		this.securityStamp = securityStamp;
	}

	@Column(name = "PhoneNumber")
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "PhoneNumberConfirmed", nullable = false)
	public boolean isPhoneNumberConfirmed() {
		return this.phoneNumberConfirmed;
	}

	public void setPhoneNumberConfirmed(boolean phoneNumberConfirmed) {
		this.phoneNumberConfirmed = phoneNumberConfirmed;
	}

	@Column(name = "TwoFactorEnabled", nullable = false)
	public boolean isTwoFactorEnabled() {
		return this.twoFactorEnabled;
	}

	public void setTwoFactorEnabled(boolean twoFactorEnabled) {
		this.twoFactorEnabled = twoFactorEnabled;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LockoutEndDateUtc", length = 19)
	public Date getLockoutEndDateUtc() {
		return this.lockoutEndDateUtc;
	}

	public void setLockoutEndDateUtc(Date lockoutEndDateUtc) {
		this.lockoutEndDateUtc = lockoutEndDateUtc;
	}

	@Column(name = "LockoutEnabled", nullable = false)
	public boolean isLockoutEnabled() {
		return this.lockoutEnabled;
	}

	public void setLockoutEnabled(boolean lockoutEnabled) {
		this.lockoutEnabled = lockoutEnabled;
	}

	@Column(name = "AccessFailedCount", nullable = false)
	public int getAccessFailedCount() {
		return this.accessFailedCount;
	}

	public void setAccessFailedCount(int accessFailedCount) {
		this.accessFailedCount = accessFailedCount;
	}

	@Column(name = "Login")
	public String getLogin() {
		return this.login;
	}

	public void setLogin(String login) {
		this.login = login;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "swapperBySwapperrecId")
	public Set<Swapperclaim> getSwapperclaimsForSwapperrecId() {
		return this.swapperclaimsForSwapperrecId;
	}

	public void setSwapperclaimsForSwapperrecId(Set<Swapperclaim> swapperclaimsForSwapperrecId) {
		this.swapperclaimsForSwapperrecId = swapperclaimsForSwapperrecId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "swapper")
	public Set<Service> getServices() {
		return this.services;
	}

	public void setServices(Set<Service> services) {
		this.services = services;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "swapper")
	public Set<Customuserclaims> getCustomuserclaimses() {
		return this.customuserclaimses;
	}

	public void setCustomuserclaimses(Set<Customuserclaims> customuserclaimses) {
		this.customuserclaimses = customuserclaimses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "swapperBySwappersurId")
	public Set<Swapperclaim> getSwapperclaimsForSwappersurId() {
		return this.swapperclaimsForSwappersurId;
	}

	public void setSwapperclaimsForSwappersurId(Set<Swapperclaim> swapperclaimsForSwappersurId) {
		this.swapperclaimsForSwappersurId = swapperclaimsForSwappersurId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "swapper")
	public Set<Customuserlogins> getCustomuserloginses() {
		return this.customuserloginses;
	}

	public void setCustomuserloginses(Set<Customuserlogins> customuserloginses) {
		this.customuserloginses = customuserloginses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "swapper")
	public Set<Comments> getCommentses() {
		return this.commentses;
	}

	public void setCommentses(Set<Comments> commentses) {
		this.commentses = commentses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "swapper")
	public Set<Forum> getForums() {
		return this.forums;
	}

	public void setForums(Set<Forum> forums) {
		this.forums = forums;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "swapper")
	public Set<Notes> getNoteses() {
		return this.noteses;
	}

	public void setNoteses(Set<Notes> noteses) {
		this.noteses = noteses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "cadeauswap", catalog = "troc", joinColumns = {
			@JoinColumn(name = "swapper_Id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "cadeau_id_cadeau", nullable = false, updatable = false) })
	public Set<Cadeau> getCadeaus() {
		return this.cadeaus;
	}

	public void setCadeaus(Set<Cadeau> cadeaus) {
		this.cadeaus = cadeaus;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "swapper")
	public Set<Goods> getGoodses() {
		return this.goodses;
	}

	public void setGoodses(Set<Goods> goodses) {
		this.goodses = goodses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "swapper")
	public Set<Claim> getClaims() {
		return this.claims;
	}

	public void setClaims(Set<Claim> claims) {
		this.claims = claims;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "swapper")
	public Set<Customuserroles> getCustomuserroleses() {
		return this.customuserroleses;
	}

	public void setCustomuserroleses(Set<Customuserroles> customuserroleses) {
		this.customuserroleses = customuserroleses;
	}

	public Swapper(Integer idSwapper) {
	
		this.idSwapper = idSwapper;
	}
	
	

}
